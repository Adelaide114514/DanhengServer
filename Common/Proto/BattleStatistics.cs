// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: BattleStatistics.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from BattleStatistics.proto</summary>
  public static partial class BattleStatisticsReflection {

    #region Descriptor
    /// <summary>File descriptor for BattleStatistics.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BattleStatisticsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZCYXR0bGVTdGF0aXN0aWNzLnByb3RvGhZBdmF0YXJCYXR0bGVJbmZvLnBy",
            "b3RvGhVCYXR0bGVFbmRSZWFzb24ucHJvdG8i6wMKEEJhdHRsZVN0YXRpc3Rp",
            "Y3MSGgoSdG90YWxfYmF0dGxlX3R1cm5zGAEgASgNEhgKEHRvdGFsX2F1dG9f",
            "dHVybnMYAiABKA0SFgoOYXZhdGFyX2lkX2xpc3QYAyADKA0SEQoJdWx0cmFf",
            "Y250GAQgASgNEhwKFHRvdGFsX2RlbGF5X2N1bXVsYXRlGAUgASgBEhEKCWNv",
            "c3RfdGltZRgGIAEoARItChJiYXR0bGVfYXZhdGFyX2xpc3QYByADKAsyES5B",
            "dmF0YXJCYXR0bGVJbmZvEhEKCXJvdW5kX2NudBgJIAEoDRIYChBjb2Nvb25f",
            "ZGVhZF93YXZlGAogASgNEhsKE2F2YXRhcl9iYXR0bGVfdHVybnMYCyABKA0S",
            "HAoUbW9uc3Rlcl9iYXR0bGVfdHVybnMYDCABKA0SOgoNY3VzdG9tX3ZhbHVl",
            "cxgNIAMoCzIjLkJhdHRsZVN0YXRpc3RpY3MuQ3VzdG9tVmFsdWVzRW50cnkS",
            "FwoPY2hhbGxlbmdlX3Njb3JlGA4gASgNEiQKCmVuZF9yZWFzb24YEyABKA4y",
            "EC5CYXR0bGVFbmRSZWFzb24aMwoRQ3VzdG9tVmFsdWVzRW50cnkSCwoDa2V5",
            "GAEgASgJEg0KBXZhbHVlGAIgASgCOgI4AUIeqgIbRWdnTGluay5EYW5oZW5n",
            "U2VydmVyLlByb3RvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.AvatarBattleInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.BattleEndReasonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.BattleStatistics), global::EggLink.DanhengServer.Proto.BattleStatistics.Parser, new[]{ "TotalBattleTurns", "TotalAutoTurns", "AvatarIdList", "UltraCnt", "TotalDelayCumulate", "CostTime", "BattleAvatarList", "RoundCnt", "CocoonDeadWave", "AvatarBattleTurns", "MonsterBattleTurns", "CustomValues", "ChallengeScore", "EndReason" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class BattleStatistics : pb::IMessage<BattleStatistics>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BattleStatistics> _parser = new pb::MessageParser<BattleStatistics>(() => new BattleStatistics());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BattleStatistics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.BattleStatisticsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattleStatistics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattleStatistics(BattleStatistics other) : this() {
      totalBattleTurns_ = other.totalBattleTurns_;
      totalAutoTurns_ = other.totalAutoTurns_;
      avatarIdList_ = other.avatarIdList_.Clone();
      ultraCnt_ = other.ultraCnt_;
      totalDelayCumulate_ = other.totalDelayCumulate_;
      costTime_ = other.costTime_;
      battleAvatarList_ = other.battleAvatarList_.Clone();
      roundCnt_ = other.roundCnt_;
      cocoonDeadWave_ = other.cocoonDeadWave_;
      avatarBattleTurns_ = other.avatarBattleTurns_;
      monsterBattleTurns_ = other.monsterBattleTurns_;
      customValues_ = other.customValues_.Clone();
      challengeScore_ = other.challengeScore_;
      endReason_ = other.endReason_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattleStatistics Clone() {
      return new BattleStatistics(this);
    }

    /// <summary>Field number for the "total_battle_turns" field.</summary>
    public const int TotalBattleTurnsFieldNumber = 1;
    private uint totalBattleTurns_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotalBattleTurns {
      get { return totalBattleTurns_; }
      set {
        totalBattleTurns_ = value;
      }
    }

    /// <summary>Field number for the "total_auto_turns" field.</summary>
    public const int TotalAutoTurnsFieldNumber = 2;
    private uint totalAutoTurns_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotalAutoTurns {
      get { return totalAutoTurns_; }
      set {
        totalAutoTurns_ = value;
      }
    }

    /// <summary>Field number for the "avatar_id_list" field.</summary>
    public const int AvatarIdListFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_avatarIdList_codec
        = pb::FieldCodec.ForUInt32(26);
    private readonly pbc::RepeatedField<uint> avatarIdList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> AvatarIdList {
      get { return avatarIdList_; }
    }

    /// <summary>Field number for the "ultra_cnt" field.</summary>
    public const int UltraCntFieldNumber = 4;
    private uint ultraCnt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UltraCnt {
      get { return ultraCnt_; }
      set {
        ultraCnt_ = value;
      }
    }

    /// <summary>Field number for the "total_delay_cumulate" field.</summary>
    public const int TotalDelayCumulateFieldNumber = 5;
    private double totalDelayCumulate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalDelayCumulate {
      get { return totalDelayCumulate_; }
      set {
        totalDelayCumulate_ = value;
      }
    }

    /// <summary>Field number for the "cost_time" field.</summary>
    public const int CostTimeFieldNumber = 6;
    private double costTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double CostTime {
      get { return costTime_; }
      set {
        costTime_ = value;
      }
    }

    /// <summary>Field number for the "battle_avatar_list" field.</summary>
    public const int BattleAvatarListFieldNumber = 7;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.AvatarBattleInfo> _repeated_battleAvatarList_codec
        = pb::FieldCodec.ForMessage(58, global::EggLink.DanhengServer.Proto.AvatarBattleInfo.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AvatarBattleInfo> battleAvatarList_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AvatarBattleInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AvatarBattleInfo> BattleAvatarList {
      get { return battleAvatarList_; }
    }

    /// <summary>Field number for the "round_cnt" field.</summary>
    public const int RoundCntFieldNumber = 9;
    private uint roundCnt_;
    /// <summary>
    ///repeated MonsterBattleInfo monster_list = 8;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RoundCnt {
      get { return roundCnt_; }
      set {
        roundCnt_ = value;
      }
    }

    /// <summary>Field number for the "cocoon_dead_wave" field.</summary>
    public const int CocoonDeadWaveFieldNumber = 10;
    private uint cocoonDeadWave_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CocoonDeadWave {
      get { return cocoonDeadWave_; }
      set {
        cocoonDeadWave_ = value;
      }
    }

    /// <summary>Field number for the "avatar_battle_turns" field.</summary>
    public const int AvatarBattleTurnsFieldNumber = 11;
    private uint avatarBattleTurns_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AvatarBattleTurns {
      get { return avatarBattleTurns_; }
      set {
        avatarBattleTurns_ = value;
      }
    }

    /// <summary>Field number for the "monster_battle_turns" field.</summary>
    public const int MonsterBattleTurnsFieldNumber = 12;
    private uint monsterBattleTurns_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MonsterBattleTurns {
      get { return monsterBattleTurns_; }
      set {
        monsterBattleTurns_ = value;
      }
    }

    /// <summary>Field number for the "custom_values" field.</summary>
    public const int CustomValuesFieldNumber = 13;
    private static readonly pbc::MapField<string, float>.Codec _map_customValues_codec
        = new pbc::MapField<string, float>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForFloat(21, 0F), 106);
    private readonly pbc::MapField<string, float> customValues_ = new pbc::MapField<string, float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, float> CustomValues {
      get { return customValues_; }
    }

    /// <summary>Field number for the "challenge_score" field.</summary>
    public const int ChallengeScoreFieldNumber = 14;
    private uint challengeScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ChallengeScore {
      get { return challengeScore_; }
      set {
        challengeScore_ = value;
      }
    }

    /// <summary>Field number for the "end_reason" field.</summary>
    public const int EndReasonFieldNumber = 19;
    private global::EggLink.DanhengServer.Proto.BattleEndReason endReason_ = global::EggLink.DanhengServer.Proto.BattleEndReason.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.BattleEndReason EndReason {
      get { return endReason_; }
      set {
        endReason_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BattleStatistics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BattleStatistics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TotalBattleTurns != other.TotalBattleTurns) return false;
      if (TotalAutoTurns != other.TotalAutoTurns) return false;
      if(!avatarIdList_.Equals(other.avatarIdList_)) return false;
      if (UltraCnt != other.UltraCnt) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalDelayCumulate, other.TotalDelayCumulate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CostTime, other.CostTime)) return false;
      if(!battleAvatarList_.Equals(other.battleAvatarList_)) return false;
      if (RoundCnt != other.RoundCnt) return false;
      if (CocoonDeadWave != other.CocoonDeadWave) return false;
      if (AvatarBattleTurns != other.AvatarBattleTurns) return false;
      if (MonsterBattleTurns != other.MonsterBattleTurns) return false;
      if (!CustomValues.Equals(other.CustomValues)) return false;
      if (ChallengeScore != other.ChallengeScore) return false;
      if (EndReason != other.EndReason) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TotalBattleTurns != 0) hash ^= TotalBattleTurns.GetHashCode();
      if (TotalAutoTurns != 0) hash ^= TotalAutoTurns.GetHashCode();
      hash ^= avatarIdList_.GetHashCode();
      if (UltraCnt != 0) hash ^= UltraCnt.GetHashCode();
      if (TotalDelayCumulate != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalDelayCumulate);
      if (CostTime != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CostTime);
      hash ^= battleAvatarList_.GetHashCode();
      if (RoundCnt != 0) hash ^= RoundCnt.GetHashCode();
      if (CocoonDeadWave != 0) hash ^= CocoonDeadWave.GetHashCode();
      if (AvatarBattleTurns != 0) hash ^= AvatarBattleTurns.GetHashCode();
      if (MonsterBattleTurns != 0) hash ^= MonsterBattleTurns.GetHashCode();
      hash ^= CustomValues.GetHashCode();
      if (ChallengeScore != 0) hash ^= ChallengeScore.GetHashCode();
      if (EndReason != global::EggLink.DanhengServer.Proto.BattleEndReason.None) hash ^= EndReason.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TotalBattleTurns != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(TotalBattleTurns);
      }
      if (TotalAutoTurns != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(TotalAutoTurns);
      }
      avatarIdList_.WriteTo(output, _repeated_avatarIdList_codec);
      if (UltraCnt != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(UltraCnt);
      }
      if (TotalDelayCumulate != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(TotalDelayCumulate);
      }
      if (CostTime != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(CostTime);
      }
      battleAvatarList_.WriteTo(output, _repeated_battleAvatarList_codec);
      if (RoundCnt != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(RoundCnt);
      }
      if (CocoonDeadWave != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(CocoonDeadWave);
      }
      if (AvatarBattleTurns != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(AvatarBattleTurns);
      }
      if (MonsterBattleTurns != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(MonsterBattleTurns);
      }
      customValues_.WriteTo(output, _map_customValues_codec);
      if (ChallengeScore != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(ChallengeScore);
      }
      if (EndReason != global::EggLink.DanhengServer.Proto.BattleEndReason.None) {
        output.WriteRawTag(152, 1);
        output.WriteEnum((int) EndReason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TotalBattleTurns != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(TotalBattleTurns);
      }
      if (TotalAutoTurns != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(TotalAutoTurns);
      }
      avatarIdList_.WriteTo(ref output, _repeated_avatarIdList_codec);
      if (UltraCnt != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(UltraCnt);
      }
      if (TotalDelayCumulate != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(TotalDelayCumulate);
      }
      if (CostTime != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(CostTime);
      }
      battleAvatarList_.WriteTo(ref output, _repeated_battleAvatarList_codec);
      if (RoundCnt != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(RoundCnt);
      }
      if (CocoonDeadWave != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(CocoonDeadWave);
      }
      if (AvatarBattleTurns != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(AvatarBattleTurns);
      }
      if (MonsterBattleTurns != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(MonsterBattleTurns);
      }
      customValues_.WriteTo(ref output, _map_customValues_codec);
      if (ChallengeScore != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(ChallengeScore);
      }
      if (EndReason != global::EggLink.DanhengServer.Proto.BattleEndReason.None) {
        output.WriteRawTag(152, 1);
        output.WriteEnum((int) EndReason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TotalBattleTurns != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalBattleTurns);
      }
      if (TotalAutoTurns != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalAutoTurns);
      }
      size += avatarIdList_.CalculateSize(_repeated_avatarIdList_codec);
      if (UltraCnt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UltraCnt);
      }
      if (TotalDelayCumulate != 0D) {
        size += 1 + 8;
      }
      if (CostTime != 0D) {
        size += 1 + 8;
      }
      size += battleAvatarList_.CalculateSize(_repeated_battleAvatarList_codec);
      if (RoundCnt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RoundCnt);
      }
      if (CocoonDeadWave != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CocoonDeadWave);
      }
      if (AvatarBattleTurns != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AvatarBattleTurns);
      }
      if (MonsterBattleTurns != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MonsterBattleTurns);
      }
      size += customValues_.CalculateSize(_map_customValues_codec);
      if (ChallengeScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChallengeScore);
      }
      if (EndReason != global::EggLink.DanhengServer.Proto.BattleEndReason.None) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) EndReason);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BattleStatistics other) {
      if (other == null) {
        return;
      }
      if (other.TotalBattleTurns != 0) {
        TotalBattleTurns = other.TotalBattleTurns;
      }
      if (other.TotalAutoTurns != 0) {
        TotalAutoTurns = other.TotalAutoTurns;
      }
      avatarIdList_.Add(other.avatarIdList_);
      if (other.UltraCnt != 0) {
        UltraCnt = other.UltraCnt;
      }
      if (other.TotalDelayCumulate != 0D) {
        TotalDelayCumulate = other.TotalDelayCumulate;
      }
      if (other.CostTime != 0D) {
        CostTime = other.CostTime;
      }
      battleAvatarList_.Add(other.battleAvatarList_);
      if (other.RoundCnt != 0) {
        RoundCnt = other.RoundCnt;
      }
      if (other.CocoonDeadWave != 0) {
        CocoonDeadWave = other.CocoonDeadWave;
      }
      if (other.AvatarBattleTurns != 0) {
        AvatarBattleTurns = other.AvatarBattleTurns;
      }
      if (other.MonsterBattleTurns != 0) {
        MonsterBattleTurns = other.MonsterBattleTurns;
      }
      customValues_.MergeFrom(other.customValues_);
      if (other.ChallengeScore != 0) {
        ChallengeScore = other.ChallengeScore;
      }
      if (other.EndReason != global::EggLink.DanhengServer.Proto.BattleEndReason.None) {
        EndReason = other.EndReason;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TotalBattleTurns = input.ReadUInt32();
            break;
          }
          case 16: {
            TotalAutoTurns = input.ReadUInt32();
            break;
          }
          case 26:
          case 24: {
            avatarIdList_.AddEntriesFrom(input, _repeated_avatarIdList_codec);
            break;
          }
          case 32: {
            UltraCnt = input.ReadUInt32();
            break;
          }
          case 41: {
            TotalDelayCumulate = input.ReadDouble();
            break;
          }
          case 49: {
            CostTime = input.ReadDouble();
            break;
          }
          case 58: {
            battleAvatarList_.AddEntriesFrom(input, _repeated_battleAvatarList_codec);
            break;
          }
          case 72: {
            RoundCnt = input.ReadUInt32();
            break;
          }
          case 80: {
            CocoonDeadWave = input.ReadUInt32();
            break;
          }
          case 88: {
            AvatarBattleTurns = input.ReadUInt32();
            break;
          }
          case 96: {
            MonsterBattleTurns = input.ReadUInt32();
            break;
          }
          case 106: {
            customValues_.AddEntriesFrom(input, _map_customValues_codec);
            break;
          }
          case 112: {
            ChallengeScore = input.ReadUInt32();
            break;
          }
          case 152: {
            EndReason = (global::EggLink.DanhengServer.Proto.BattleEndReason) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TotalBattleTurns = input.ReadUInt32();
            break;
          }
          case 16: {
            TotalAutoTurns = input.ReadUInt32();
            break;
          }
          case 26:
          case 24: {
            avatarIdList_.AddEntriesFrom(ref input, _repeated_avatarIdList_codec);
            break;
          }
          case 32: {
            UltraCnt = input.ReadUInt32();
            break;
          }
          case 41: {
            TotalDelayCumulate = input.ReadDouble();
            break;
          }
          case 49: {
            CostTime = input.ReadDouble();
            break;
          }
          case 58: {
            battleAvatarList_.AddEntriesFrom(ref input, _repeated_battleAvatarList_codec);
            break;
          }
          case 72: {
            RoundCnt = input.ReadUInt32();
            break;
          }
          case 80: {
            CocoonDeadWave = input.ReadUInt32();
            break;
          }
          case 88: {
            AvatarBattleTurns = input.ReadUInt32();
            break;
          }
          case 96: {
            MonsterBattleTurns = input.ReadUInt32();
            break;
          }
          case 106: {
            customValues_.AddEntriesFrom(ref input, _map_customValues_codec);
            break;
          }
          case 112: {
            ChallengeScore = input.ReadUInt32();
            break;
          }
          case 152: {
            EndReason = (global::EggLink.DanhengServer.Proto.BattleEndReason) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
