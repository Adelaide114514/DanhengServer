// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ChallengeInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from ChallengeInfo.proto</summary>
  public static partial class ChallengeInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for ChallengeInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChallengeInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNDaGFsbGVuZ2VJbmZvLnByb3RvGhVFeHRyYUxpbmV1cFR5cGUucHJvdG8a",
            "FUNoYWxsZW5nZVN0YXR1cy5wcm90bxoYQ2hhbGxlbmdlU3RvcnlJbmZvLnBy",
            "b3RvItQBCg1DaGFsbGVuZ2VJbmZvEhQKDGNoYWxsZW5nZV9pZBgOIAEoDRIR",
            "CglzY29yZV90d28YAiABKA0SIAoGc3RhdHVzGAogASgOMhAuQ2hhbGxlbmdl",
            "U3RhdHVzEisKEWV4dHJhX2xpbmV1cF90eXBlGAQgASgOMhAuRXh0cmFMaW5l",
            "dXBUeXBlEicKCnN0b3J5X2luZm8YBiABKAsyEy5DaGFsbGVuZ2VTdG9yeUlu",
            "Zm8SEwoLcm91bmRfY291bnQYBSABKA0SDQoFc2NvcmUYCSABKA1CHqoCG0Vn",
            "Z0xpbmsuRGFuaGVuZ1NlcnZlci5Qcm90b2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.ExtraLineupTypeReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChallengeStatusReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChallengeStoryInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.ChallengeInfo), global::EggLink.DanhengServer.Proto.ChallengeInfo.Parser, new[]{ "ChallengeId", "ScoreTwo", "Status", "ExtraLineupType", "StoryInfo", "RoundCount", "Score" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ChallengeInfo : pb::IMessage<ChallengeInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChallengeInfo> _parser = new pb::MessageParser<ChallengeInfo>(() => new ChallengeInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChallengeInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.ChallengeInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChallengeInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChallengeInfo(ChallengeInfo other) : this() {
      challengeId_ = other.challengeId_;
      scoreTwo_ = other.scoreTwo_;
      status_ = other.status_;
      extraLineupType_ = other.extraLineupType_;
      storyInfo_ = other.storyInfo_ != null ? other.storyInfo_.Clone() : null;
      roundCount_ = other.roundCount_;
      score_ = other.score_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChallengeInfo Clone() {
      return new ChallengeInfo(this);
    }

    /// <summary>Field number for the "challenge_id" field.</summary>
    public const int ChallengeIdFieldNumber = 14;
    private uint challengeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ChallengeId {
      get { return challengeId_; }
      set {
        challengeId_ = value;
      }
    }

    /// <summary>Field number for the "score_two" field.</summary>
    public const int ScoreTwoFieldNumber = 2;
    private uint scoreTwo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScoreTwo {
      get { return scoreTwo_; }
      set {
        scoreTwo_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 10;
    private global::EggLink.DanhengServer.Proto.ChallengeStatus status_ = global::EggLink.DanhengServer.Proto.ChallengeStatus.ChallengeUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChallengeStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "extra_lineup_type" field.</summary>
    public const int ExtraLineupTypeFieldNumber = 4;
    private global::EggLink.DanhengServer.Proto.ExtraLineupType extraLineupType_ = global::EggLink.DanhengServer.Proto.ExtraLineupType.LineupNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ExtraLineupType ExtraLineupType {
      get { return extraLineupType_; }
      set {
        extraLineupType_ = value;
      }
    }

    /// <summary>Field number for the "story_info" field.</summary>
    public const int StoryInfoFieldNumber = 6;
    private global::EggLink.DanhengServer.Proto.ChallengeStoryInfo storyInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChallengeStoryInfo StoryInfo {
      get { return storyInfo_; }
      set {
        storyInfo_ = value;
      }
    }

    /// <summary>Field number for the "round_count" field.</summary>
    public const int RoundCountFieldNumber = 5;
    private uint roundCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RoundCount {
      get { return roundCount_; }
      set {
        roundCount_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 9;
    private uint score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChallengeInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChallengeInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChallengeId != other.ChallengeId) return false;
      if (ScoreTwo != other.ScoreTwo) return false;
      if (Status != other.Status) return false;
      if (ExtraLineupType != other.ExtraLineupType) return false;
      if (!object.Equals(StoryInfo, other.StoryInfo)) return false;
      if (RoundCount != other.RoundCount) return false;
      if (Score != other.Score) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ChallengeId != 0) hash ^= ChallengeId.GetHashCode();
      if (ScoreTwo != 0) hash ^= ScoreTwo.GetHashCode();
      if (Status != global::EggLink.DanhengServer.Proto.ChallengeStatus.ChallengeUnknown) hash ^= Status.GetHashCode();
      if (ExtraLineupType != global::EggLink.DanhengServer.Proto.ExtraLineupType.LineupNone) hash ^= ExtraLineupType.GetHashCode();
      if (storyInfo_ != null) hash ^= StoryInfo.GetHashCode();
      if (RoundCount != 0) hash ^= RoundCount.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ScoreTwo != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ScoreTwo);
      }
      if (ExtraLineupType != global::EggLink.DanhengServer.Proto.ExtraLineupType.LineupNone) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ExtraLineupType);
      }
      if (RoundCount != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(RoundCount);
      }
      if (storyInfo_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(StoryInfo);
      }
      if (Score != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(Score);
      }
      if (Status != global::EggLink.DanhengServer.Proto.ChallengeStatus.ChallengeUnknown) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Status);
      }
      if (ChallengeId != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(ChallengeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ScoreTwo != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ScoreTwo);
      }
      if (ExtraLineupType != global::EggLink.DanhengServer.Proto.ExtraLineupType.LineupNone) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ExtraLineupType);
      }
      if (RoundCount != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(RoundCount);
      }
      if (storyInfo_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(StoryInfo);
      }
      if (Score != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(Score);
      }
      if (Status != global::EggLink.DanhengServer.Proto.ChallengeStatus.ChallengeUnknown) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Status);
      }
      if (ChallengeId != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(ChallengeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ChallengeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChallengeId);
      }
      if (ScoreTwo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ScoreTwo);
      }
      if (Status != global::EggLink.DanhengServer.Proto.ChallengeStatus.ChallengeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (ExtraLineupType != global::EggLink.DanhengServer.Proto.ExtraLineupType.LineupNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ExtraLineupType);
      }
      if (storyInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StoryInfo);
      }
      if (RoundCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RoundCount);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Score);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChallengeInfo other) {
      if (other == null) {
        return;
      }
      if (other.ChallengeId != 0) {
        ChallengeId = other.ChallengeId;
      }
      if (other.ScoreTwo != 0) {
        ScoreTwo = other.ScoreTwo;
      }
      if (other.Status != global::EggLink.DanhengServer.Proto.ChallengeStatus.ChallengeUnknown) {
        Status = other.Status;
      }
      if (other.ExtraLineupType != global::EggLink.DanhengServer.Proto.ExtraLineupType.LineupNone) {
        ExtraLineupType = other.ExtraLineupType;
      }
      if (other.storyInfo_ != null) {
        if (storyInfo_ == null) {
          StoryInfo = new global::EggLink.DanhengServer.Proto.ChallengeStoryInfo();
        }
        StoryInfo.MergeFrom(other.StoryInfo);
      }
      if (other.RoundCount != 0) {
        RoundCount = other.RoundCount;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            ScoreTwo = input.ReadUInt32();
            break;
          }
          case 32: {
            ExtraLineupType = (global::EggLink.DanhengServer.Proto.ExtraLineupType) input.ReadEnum();
            break;
          }
          case 40: {
            RoundCount = input.ReadUInt32();
            break;
          }
          case 50: {
            if (storyInfo_ == null) {
              StoryInfo = new global::EggLink.DanhengServer.Proto.ChallengeStoryInfo();
            }
            input.ReadMessage(StoryInfo);
            break;
          }
          case 72: {
            Score = input.ReadUInt32();
            break;
          }
          case 80: {
            Status = (global::EggLink.DanhengServer.Proto.ChallengeStatus) input.ReadEnum();
            break;
          }
          case 112: {
            ChallengeId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            ScoreTwo = input.ReadUInt32();
            break;
          }
          case 32: {
            ExtraLineupType = (global::EggLink.DanhengServer.Proto.ExtraLineupType) input.ReadEnum();
            break;
          }
          case 40: {
            RoundCount = input.ReadUInt32();
            break;
          }
          case 50: {
            if (storyInfo_ == null) {
              StoryInfo = new global::EggLink.DanhengServer.Proto.ChallengeStoryInfo();
            }
            input.ReadMessage(StoryInfo);
            break;
          }
          case 72: {
            Score = input.ReadUInt32();
            break;
          }
          case 80: {
            Status = (global::EggLink.DanhengServer.Proto.ChallengeStatus) input.ReadEnum();
            break;
          }
          case 112: {
            ChallengeId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
