// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ChessRogueQuery.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from ChessRogueQuery.proto</summary>
  public static partial class ChessRogueQueryReflection {

    #region Descriptor
    /// <summary>File descriptor for ChessRogueQuery.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChessRogueQueryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVDaGVzc1JvZ3VlUXVlcnkucHJvdG8aHENoZXNzUm9ndWVOb3VzRGljZUlu",
            "Zm8ucHJvdG8aFUNoZXNzUm9ndWVQaGFzZS5wcm90byLhAQoPQ2hlc3NSb2d1",
            "ZVF1ZXJ5EioKCWRpY2VfaW5mbxgMIAMoCzIXLkNoZXNzUm9ndWVOb3VzRGlj",
            "ZUluZm8SHwoFcGhhc2UYCiABKA4yEC5DaGVzc1JvZ3VlUGhhc2USNgoLRUtM",
            "QUZNQkhOSVAYBiADKAsyIS5DaGVzc1JvZ3VlUXVlcnkuRUtMQUZNQkhOSVBF",
            "bnRyeRIVCg1tYWluX3N0b3J5X2lkGAggAygNGjIKEEVLTEFGTUJITklQRW50",
            "cnkSCwoDa2V5GAEgASgNEg0KBXZhbHVlGAIgASgIOgI4AUIeqgIbRWdnTGlu",
            "ay5EYW5oZW5nU2VydmVyLlByb3RvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.ChessRogueNousDiceInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRoguePhaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.ChessRogueQuery), global::EggLink.DanhengServer.Proto.ChessRogueQuery.Parser, new[]{ "DiceInfo", "Phase", "EKLAFMBHNIP", "MainStoryId" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ChessRogueQuery : pb::IMessage<ChessRogueQuery>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChessRogueQuery> _parser = new pb::MessageParser<ChessRogueQuery>(() => new ChessRogueQuery());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChessRogueQuery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.ChessRogueQueryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueQuery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueQuery(ChessRogueQuery other) : this() {
      diceInfo_ = other.diceInfo_.Clone();
      phase_ = other.phase_;
      eKLAFMBHNIP_ = other.eKLAFMBHNIP_.Clone();
      mainStoryId_ = other.mainStoryId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueQuery Clone() {
      return new ChessRogueQuery(this);
    }

    /// <summary>Field number for the "dice_info" field.</summary>
    public const int DiceInfoFieldNumber = 12;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.ChessRogueNousDiceInfo> _repeated_diceInfo_codec
        = pb::FieldCodec.ForMessage(98, global::EggLink.DanhengServer.Proto.ChessRogueNousDiceInfo.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.ChessRogueNousDiceInfo> diceInfo_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.ChessRogueNousDiceInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.ChessRogueNousDiceInfo> DiceInfo {
      get { return diceInfo_; }
    }

    /// <summary>Field number for the "phase" field.</summary>
    public const int PhaseFieldNumber = 10;
    private global::EggLink.DanhengServer.Proto.ChessRoguePhase phase_ = global::EggLink.DanhengServer.Proto.ChessRoguePhase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRoguePhase Phase {
      get { return phase_; }
      set {
        phase_ = value;
      }
    }

    /// <summary>Field number for the "EKLAFMBHNIP" field.</summary>
    public const int EKLAFMBHNIPFieldNumber = 6;
    private static readonly pbc::MapField<uint, bool>.Codec _map_eKLAFMBHNIP_codec
        = new pbc::MapField<uint, bool>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForBool(16, false), 50);
    private readonly pbc::MapField<uint, bool> eKLAFMBHNIP_ = new pbc::MapField<uint, bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, bool> EKLAFMBHNIP {
      get { return eKLAFMBHNIP_; }
    }

    /// <summary>Field number for the "main_story_id" field.</summary>
    public const int MainStoryIdFieldNumber = 8;
    private static readonly pb::FieldCodec<uint> _repeated_mainStoryId_codec
        = pb::FieldCodec.ForUInt32(66);
    private readonly pbc::RepeatedField<uint> mainStoryId_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> MainStoryId {
      get { return mainStoryId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChessRogueQuery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChessRogueQuery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!diceInfo_.Equals(other.diceInfo_)) return false;
      if (Phase != other.Phase) return false;
      if (!EKLAFMBHNIP.Equals(other.EKLAFMBHNIP)) return false;
      if(!mainStoryId_.Equals(other.mainStoryId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= diceInfo_.GetHashCode();
      if (Phase != global::EggLink.DanhengServer.Proto.ChessRoguePhase.None) hash ^= Phase.GetHashCode();
      hash ^= EKLAFMBHNIP.GetHashCode();
      hash ^= mainStoryId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eKLAFMBHNIP_.WriteTo(output, _map_eKLAFMBHNIP_codec);
      mainStoryId_.WriteTo(output, _repeated_mainStoryId_codec);
      if (Phase != global::EggLink.DanhengServer.Proto.ChessRoguePhase.None) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Phase);
      }
      diceInfo_.WriteTo(output, _repeated_diceInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eKLAFMBHNIP_.WriteTo(ref output, _map_eKLAFMBHNIP_codec);
      mainStoryId_.WriteTo(ref output, _repeated_mainStoryId_codec);
      if (Phase != global::EggLink.DanhengServer.Proto.ChessRoguePhase.None) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Phase);
      }
      diceInfo_.WriteTo(ref output, _repeated_diceInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += diceInfo_.CalculateSize(_repeated_diceInfo_codec);
      if (Phase != global::EggLink.DanhengServer.Proto.ChessRoguePhase.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Phase);
      }
      size += eKLAFMBHNIP_.CalculateSize(_map_eKLAFMBHNIP_codec);
      size += mainStoryId_.CalculateSize(_repeated_mainStoryId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChessRogueQuery other) {
      if (other == null) {
        return;
      }
      diceInfo_.Add(other.diceInfo_);
      if (other.Phase != global::EggLink.DanhengServer.Proto.ChessRoguePhase.None) {
        Phase = other.Phase;
      }
      eKLAFMBHNIP_.MergeFrom(other.eKLAFMBHNIP_);
      mainStoryId_.Add(other.mainStoryId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 50: {
            eKLAFMBHNIP_.AddEntriesFrom(input, _map_eKLAFMBHNIP_codec);
            break;
          }
          case 66:
          case 64: {
            mainStoryId_.AddEntriesFrom(input, _repeated_mainStoryId_codec);
            break;
          }
          case 80: {
            Phase = (global::EggLink.DanhengServer.Proto.ChessRoguePhase) input.ReadEnum();
            break;
          }
          case 98: {
            diceInfo_.AddEntriesFrom(input, _repeated_diceInfo_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 50: {
            eKLAFMBHNIP_.AddEntriesFrom(ref input, _map_eKLAFMBHNIP_codec);
            break;
          }
          case 66:
          case 64: {
            mainStoryId_.AddEntriesFrom(ref input, _repeated_mainStoryId_codec);
            break;
          }
          case 80: {
            Phase = (global::EggLink.DanhengServer.Proto.ChessRoguePhase) input.ReadEnum();
            break;
          }
          case 98: {
            diceInfo_.AddEntriesFrom(ref input, _repeated_diceInfo_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
