// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PlayerDetailInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from PlayerDetailInfo.proto</summary>
  public static partial class PlayerDetailInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for PlayerDetailInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlayerDetailInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZQbGF5ZXJEZXRhaWxJbmZvLnByb3RvGhJQbGF0Zm9ybVR5cGUucHJvdG8i",
            "0wEKEFBsYXllckRldGFpbEluZm8SEwoLd29ybGRfbGV2ZWwYCiABKA0SEQoJ",
            "c2lnbmF0dXJlGAIgASgJEiQKDXBsYXRmb3JtX3R5cGUYBCABKA4yDS5QbGF0",
            "Zm9ybVR5cGUSDQoFbGV2ZWwYCSABKA0SEQoJaGVhZF9pY29uGAcgASgNEgsK",
            "A3VpZBgNIAEoDRIQCghuaWNrbmFtZRgGIAEoCRIbChNkaXNwbGF5X2F2YXRh",
            "cl9pbmZvGA4gASgJEhMKC3JlY29yZF9pbmZvGA8gASgJQh6qAhtFZ2dMaW5r",
            "LkRhbmhlbmdTZXJ2ZXIuUHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.PlatformTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.PlayerDetailInfo), global::EggLink.DanhengServer.Proto.PlayerDetailInfo.Parser, new[]{ "WorldLevel", "Signature", "PlatformType", "Level", "HeadIcon", "Uid", "Nickname", "DisplayAvatarInfo", "RecordInfo" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PlayerDetailInfo : pb::IMessage<PlayerDetailInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerDetailInfo> _parser = new pb::MessageParser<PlayerDetailInfo>(() => new PlayerDetailInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerDetailInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.PlayerDetailInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerDetailInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerDetailInfo(PlayerDetailInfo other) : this() {
      worldLevel_ = other.worldLevel_;
      signature_ = other.signature_;
      platformType_ = other.platformType_;
      level_ = other.level_;
      headIcon_ = other.headIcon_;
      uid_ = other.uid_;
      nickname_ = other.nickname_;
      displayAvatarInfo_ = other.displayAvatarInfo_;
      recordInfo_ = other.recordInfo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerDetailInfo Clone() {
      return new PlayerDetailInfo(this);
    }

    /// <summary>Field number for the "world_level" field.</summary>
    public const int WorldLevelFieldNumber = 10;
    private uint worldLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint WorldLevel {
      get { return worldLevel_; }
      set {
        worldLevel_ = value;
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    private string signature_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "platform_type" field.</summary>
    public const int PlatformTypeFieldNumber = 4;
    private global::EggLink.DanhengServer.Proto.PlatformType platformType_ = global::EggLink.DanhengServer.Proto.PlatformType.Editor;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.PlatformType PlatformType {
      get { return platformType_; }
      set {
        platformType_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 9;
    private uint level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "head_icon" field.</summary>
    public const int HeadIconFieldNumber = 7;
    private uint headIcon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint HeadIcon {
      get { return headIcon_; }
      set {
        headIcon_ = value;
      }
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 13;
    private uint uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Uid {
      get { return uid_; }
      set {
        uid_ = value;
      }
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 6;
    private string nickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_avatar_info" field.</summary>
    public const int DisplayAvatarInfoFieldNumber = 14;
    private string displayAvatarInfo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayAvatarInfo {
      get { return displayAvatarInfo_; }
      set {
        displayAvatarInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "record_info" field.</summary>
    public const int RecordInfoFieldNumber = 15;
    private string recordInfo_ = "";
    /// <summary>
    ///DisplayAvatarDetailInfo display_avatar_info = 14;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RecordInfo {
      get { return recordInfo_; }
      set {
        recordInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerDetailInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerDetailInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WorldLevel != other.WorldLevel) return false;
      if (Signature != other.Signature) return false;
      if (PlatformType != other.PlatformType) return false;
      if (Level != other.Level) return false;
      if (HeadIcon != other.HeadIcon) return false;
      if (Uid != other.Uid) return false;
      if (Nickname != other.Nickname) return false;
      if (DisplayAvatarInfo != other.DisplayAvatarInfo) return false;
      if (RecordInfo != other.RecordInfo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (WorldLevel != 0) hash ^= WorldLevel.GetHashCode();
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      if (PlatformType != global::EggLink.DanhengServer.Proto.PlatformType.Editor) hash ^= PlatformType.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (HeadIcon != 0) hash ^= HeadIcon.GetHashCode();
      if (Uid != 0) hash ^= Uid.GetHashCode();
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      if (DisplayAvatarInfo.Length != 0) hash ^= DisplayAvatarInfo.GetHashCode();
      if (RecordInfo.Length != 0) hash ^= RecordInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Signature.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Signature);
      }
      if (PlatformType != global::EggLink.DanhengServer.Proto.PlatformType.Editor) {
        output.WriteRawTag(32);
        output.WriteEnum((int) PlatformType);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Nickname);
      }
      if (HeadIcon != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(HeadIcon);
      }
      if (Level != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(Level);
      }
      if (WorldLevel != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(WorldLevel);
      }
      if (Uid != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Uid);
      }
      if (DisplayAvatarInfo.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(DisplayAvatarInfo);
      }
      if (RecordInfo.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(RecordInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Signature.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Signature);
      }
      if (PlatformType != global::EggLink.DanhengServer.Proto.PlatformType.Editor) {
        output.WriteRawTag(32);
        output.WriteEnum((int) PlatformType);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Nickname);
      }
      if (HeadIcon != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(HeadIcon);
      }
      if (Level != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(Level);
      }
      if (WorldLevel != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(WorldLevel);
      }
      if (Uid != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Uid);
      }
      if (DisplayAvatarInfo.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(DisplayAvatarInfo);
      }
      if (RecordInfo.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(RecordInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (WorldLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WorldLevel);
      }
      if (Signature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Signature);
      }
      if (PlatformType != global::EggLink.DanhengServer.Proto.PlatformType.Editor) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PlatformType);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Level);
      }
      if (HeadIcon != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HeadIcon);
      }
      if (Uid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Uid);
      }
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (DisplayAvatarInfo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayAvatarInfo);
      }
      if (RecordInfo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RecordInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerDetailInfo other) {
      if (other == null) {
        return;
      }
      if (other.WorldLevel != 0) {
        WorldLevel = other.WorldLevel;
      }
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
      if (other.PlatformType != global::EggLink.DanhengServer.Proto.PlatformType.Editor) {
        PlatformType = other.PlatformType;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.HeadIcon != 0) {
        HeadIcon = other.HeadIcon;
      }
      if (other.Uid != 0) {
        Uid = other.Uid;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      if (other.DisplayAvatarInfo.Length != 0) {
        DisplayAvatarInfo = other.DisplayAvatarInfo;
      }
      if (other.RecordInfo.Length != 0) {
        RecordInfo = other.RecordInfo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            Signature = input.ReadString();
            break;
          }
          case 32: {
            PlatformType = (global::EggLink.DanhengServer.Proto.PlatformType) input.ReadEnum();
            break;
          }
          case 50: {
            Nickname = input.ReadString();
            break;
          }
          case 56: {
            HeadIcon = input.ReadUInt32();
            break;
          }
          case 72: {
            Level = input.ReadUInt32();
            break;
          }
          case 80: {
            WorldLevel = input.ReadUInt32();
            break;
          }
          case 104: {
            Uid = input.ReadUInt32();
            break;
          }
          case 114: {
            DisplayAvatarInfo = input.ReadString();
            break;
          }
          case 122: {
            RecordInfo = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            Signature = input.ReadString();
            break;
          }
          case 32: {
            PlatformType = (global::EggLink.DanhengServer.Proto.PlatformType) input.ReadEnum();
            break;
          }
          case 50: {
            Nickname = input.ReadString();
            break;
          }
          case 56: {
            HeadIcon = input.ReadUInt32();
            break;
          }
          case 72: {
            Level = input.ReadUInt32();
            break;
          }
          case 80: {
            WorldLevel = input.ReadUInt32();
            break;
          }
          case 104: {
            Uid = input.ReadUInt32();
            break;
          }
          case 114: {
            DisplayAvatarInfo = input.ReadString();
            break;
          }
          case 122: {
            RecordInfo = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
