// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: RogueAeonInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from RogueAeonInfo.proto</summary>
  public static partial class RogueAeonInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for RogueAeonInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RogueAeonInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNSb2d1ZUFlb25JbmZvLnByb3RvImkKDVJvZ3VlQWVvbkluZm8SHQoVdW5s",
            "b2NrZWRfYWVvbl9pZF9saXN0GA4gAygNEhUKDWVuaGFuY2VfY291bnQYBSAB",
            "KA0SDgoGdW5sb2NrGAEgASgIEhIKCmFlb25fY291bnQYBCABKA1CHqoCG0Vn",
            "Z0xpbmsuRGFuaGVuZ1NlcnZlci5Qcm90b2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.RogueAeonInfo), global::EggLink.DanhengServer.Proto.RogueAeonInfo.Parser, new[]{ "UnlockedAeonIdList", "EnhanceCount", "Unlock", "AeonCount" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RogueAeonInfo : pb::IMessage<RogueAeonInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RogueAeonInfo> _parser = new pb::MessageParser<RogueAeonInfo>(() => new RogueAeonInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RogueAeonInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.RogueAeonInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RogueAeonInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RogueAeonInfo(RogueAeonInfo other) : this() {
      unlockedAeonIdList_ = other.unlockedAeonIdList_.Clone();
      enhanceCount_ = other.enhanceCount_;
      unlock_ = other.unlock_;
      aeonCount_ = other.aeonCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RogueAeonInfo Clone() {
      return new RogueAeonInfo(this);
    }

    /// <summary>Field number for the "unlocked_aeon_id_list" field.</summary>
    public const int UnlockedAeonIdListFieldNumber = 14;
    private static readonly pb::FieldCodec<uint> _repeated_unlockedAeonIdList_codec
        = pb::FieldCodec.ForUInt32(114);
    private readonly pbc::RepeatedField<uint> unlockedAeonIdList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> UnlockedAeonIdList {
      get { return unlockedAeonIdList_; }
    }

    /// <summary>Field number for the "enhance_count" field.</summary>
    public const int EnhanceCountFieldNumber = 5;
    private uint enhanceCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EnhanceCount {
      get { return enhanceCount_; }
      set {
        enhanceCount_ = value;
      }
    }

    /// <summary>Field number for the "unlock" field.</summary>
    public const int UnlockFieldNumber = 1;
    private bool unlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Unlock {
      get { return unlock_; }
      set {
        unlock_ = value;
      }
    }

    /// <summary>Field number for the "aeon_count" field.</summary>
    public const int AeonCountFieldNumber = 4;
    private uint aeonCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AeonCount {
      get { return aeonCount_; }
      set {
        aeonCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RogueAeonInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RogueAeonInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!unlockedAeonIdList_.Equals(other.unlockedAeonIdList_)) return false;
      if (EnhanceCount != other.EnhanceCount) return false;
      if (Unlock != other.Unlock) return false;
      if (AeonCount != other.AeonCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= unlockedAeonIdList_.GetHashCode();
      if (EnhanceCount != 0) hash ^= EnhanceCount.GetHashCode();
      if (Unlock != false) hash ^= Unlock.GetHashCode();
      if (AeonCount != 0) hash ^= AeonCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Unlock != false) {
        output.WriteRawTag(8);
        output.WriteBool(Unlock);
      }
      if (AeonCount != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(AeonCount);
      }
      if (EnhanceCount != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(EnhanceCount);
      }
      unlockedAeonIdList_.WriteTo(output, _repeated_unlockedAeonIdList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Unlock != false) {
        output.WriteRawTag(8);
        output.WriteBool(Unlock);
      }
      if (AeonCount != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(AeonCount);
      }
      if (EnhanceCount != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(EnhanceCount);
      }
      unlockedAeonIdList_.WriteTo(ref output, _repeated_unlockedAeonIdList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += unlockedAeonIdList_.CalculateSize(_repeated_unlockedAeonIdList_codec);
      if (EnhanceCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EnhanceCount);
      }
      if (Unlock != false) {
        size += 1 + 1;
      }
      if (AeonCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AeonCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RogueAeonInfo other) {
      if (other == null) {
        return;
      }
      unlockedAeonIdList_.Add(other.unlockedAeonIdList_);
      if (other.EnhanceCount != 0) {
        EnhanceCount = other.EnhanceCount;
      }
      if (other.Unlock != false) {
        Unlock = other.Unlock;
      }
      if (other.AeonCount != 0) {
        AeonCount = other.AeonCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Unlock = input.ReadBool();
            break;
          }
          case 32: {
            AeonCount = input.ReadUInt32();
            break;
          }
          case 40: {
            EnhanceCount = input.ReadUInt32();
            break;
          }
          case 114:
          case 112: {
            unlockedAeonIdList_.AddEntriesFrom(input, _repeated_unlockedAeonIdList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Unlock = input.ReadBool();
            break;
          }
          case 32: {
            AeonCount = input.ReadUInt32();
            break;
          }
          case 40: {
            EnhanceCount = input.ReadUInt32();
            break;
          }
          case 114:
          case 112: {
            unlockedAeonIdList_.AddEntriesFrom(ref input, _repeated_unlockedAeonIdList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
