// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: RogueCommonBuffSelectInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from RogueCommonBuffSelectInfo.proto</summary>
  public static partial class RogueCommonBuffSelectInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for RogueCommonBuffSelectInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RogueCommonBuffSelectInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9Sb2d1ZUNvbW1vbkJ1ZmZTZWxlY3RJbmZvLnByb3RvGhJJdGVtQ29zdExp",
            "c3QucHJvdG8aIVJvZ3VlQ29tbW9uQnVmZlNlbGVjdFNvdXJjZS5wcm90bxoV",
            "Um9ndWVDb21tb25CdWZmLnByb3RvIqEDChlSb2d1ZUNvbW1vbkJ1ZmZTZWxl",
            "Y3RJbmZvEiYKD3JvbGxfYnVmZnNfY29zdBgMIAEoCzINLkl0ZW1Db3N0TGlz",
            "dBIXCg9yb2xsX2J1ZmZfdGltZXMYCyABKA0SEAoIY2FuX3JvbGwYAiABKAgS",
            "HwoXc2VsZWN0X2J1ZmZfc291cmNlX2hpbnQYBCABKA0SGgoSc291cmNlX3Rv",
            "dGFsX2NvdW50GAEgASgNEiQKHGhhbmRib29rX3VubG9ja19idWZmX2lkX2xp",
            "c3QYDyADKA0SGwoTcm9sbF9idWZmX21heF90aW1lcxgJIAEoDRIxCgtzb3Vy",
            "Y2VfdHlwZRgOIAEoDjIcLlJvZ3VlQ29tbW9uQnVmZlNlbGVjdFNvdXJjZRIY",
            "ChBzb3VyY2VfY3VyX2NvdW50GAogASgNEigKDm1hemVfYnVmZl9saXN0GAcg",
            "AygLMhAuUm9ndWVDb21tb25CdWZmEhwKFHJvbGxfYnVmZl9mcmVlX3RpbWVz",
            "GAggASgNEhwKFGZpcnN0X2J1ZmZfdHlwZV9saXN0GAYgAygNQh6qAhtFZ2dM",
            "aW5rLkRhbmhlbmdTZXJ2ZXIuUHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.ItemCostListReflection.Descriptor, global::EggLink.DanhengServer.Proto.RogueCommonBuffSelectSourceReflection.Descriptor, global::EggLink.DanhengServer.Proto.RogueCommonBuffReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.RogueCommonBuffSelectInfo), global::EggLink.DanhengServer.Proto.RogueCommonBuffSelectInfo.Parser, new[]{ "RollBuffsCost", "RollBuffTimes", "CanRoll", "SelectBuffSourceHint", "SourceTotalCount", "HandbookUnlockBuffIdList", "RollBuffMaxTimes", "SourceType", "SourceCurCount", "MazeBuffList", "RollBuffFreeTimes", "FirstBuffTypeList" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RogueCommonBuffSelectInfo : pb::IMessage<RogueCommonBuffSelectInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RogueCommonBuffSelectInfo> _parser = new pb::MessageParser<RogueCommonBuffSelectInfo>(() => new RogueCommonBuffSelectInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RogueCommonBuffSelectInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.RogueCommonBuffSelectInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RogueCommonBuffSelectInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RogueCommonBuffSelectInfo(RogueCommonBuffSelectInfo other) : this() {
      rollBuffsCost_ = other.rollBuffsCost_ != null ? other.rollBuffsCost_.Clone() : null;
      rollBuffTimes_ = other.rollBuffTimes_;
      canRoll_ = other.canRoll_;
      selectBuffSourceHint_ = other.selectBuffSourceHint_;
      sourceTotalCount_ = other.sourceTotalCount_;
      handbookUnlockBuffIdList_ = other.handbookUnlockBuffIdList_.Clone();
      rollBuffMaxTimes_ = other.rollBuffMaxTimes_;
      sourceType_ = other.sourceType_;
      sourceCurCount_ = other.sourceCurCount_;
      mazeBuffList_ = other.mazeBuffList_.Clone();
      rollBuffFreeTimes_ = other.rollBuffFreeTimes_;
      firstBuffTypeList_ = other.firstBuffTypeList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RogueCommonBuffSelectInfo Clone() {
      return new RogueCommonBuffSelectInfo(this);
    }

    /// <summary>Field number for the "roll_buffs_cost" field.</summary>
    public const int RollBuffsCostFieldNumber = 12;
    private global::EggLink.DanhengServer.Proto.ItemCostList rollBuffsCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ItemCostList RollBuffsCost {
      get { return rollBuffsCost_; }
      set {
        rollBuffsCost_ = value;
      }
    }

    /// <summary>Field number for the "roll_buff_times" field.</summary>
    public const int RollBuffTimesFieldNumber = 11;
    private uint rollBuffTimes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RollBuffTimes {
      get { return rollBuffTimes_; }
      set {
        rollBuffTimes_ = value;
      }
    }

    /// <summary>Field number for the "can_roll" field.</summary>
    public const int CanRollFieldNumber = 2;
    private bool canRoll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanRoll {
      get { return canRoll_; }
      set {
        canRoll_ = value;
      }
    }

    /// <summary>Field number for the "select_buff_source_hint" field.</summary>
    public const int SelectBuffSourceHintFieldNumber = 4;
    private uint selectBuffSourceHint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SelectBuffSourceHint {
      get { return selectBuffSourceHint_; }
      set {
        selectBuffSourceHint_ = value;
      }
    }

    /// <summary>Field number for the "source_total_count" field.</summary>
    public const int SourceTotalCountFieldNumber = 1;
    private uint sourceTotalCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SourceTotalCount {
      get { return sourceTotalCount_; }
      set {
        sourceTotalCount_ = value;
      }
    }

    /// <summary>Field number for the "handbook_unlock_buff_id_list" field.</summary>
    public const int HandbookUnlockBuffIdListFieldNumber = 15;
    private static readonly pb::FieldCodec<uint> _repeated_handbookUnlockBuffIdList_codec
        = pb::FieldCodec.ForUInt32(122);
    private readonly pbc::RepeatedField<uint> handbookUnlockBuffIdList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> HandbookUnlockBuffIdList {
      get { return handbookUnlockBuffIdList_; }
    }

    /// <summary>Field number for the "roll_buff_max_times" field.</summary>
    public const int RollBuffMaxTimesFieldNumber = 9;
    private uint rollBuffMaxTimes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RollBuffMaxTimes {
      get { return rollBuffMaxTimes_; }
      set {
        rollBuffMaxTimes_ = value;
      }
    }

    /// <summary>Field number for the "source_type" field.</summary>
    public const int SourceTypeFieldNumber = 14;
    private global::EggLink.DanhengServer.Proto.RogueCommonBuffSelectSource sourceType_ = global::EggLink.DanhengServer.Proto.RogueCommonBuffSelectSource.TypeNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.RogueCommonBuffSelectSource SourceType {
      get { return sourceType_; }
      set {
        sourceType_ = value;
      }
    }

    /// <summary>Field number for the "source_cur_count" field.</summary>
    public const int SourceCurCountFieldNumber = 10;
    private uint sourceCurCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SourceCurCount {
      get { return sourceCurCount_; }
      set {
        sourceCurCount_ = value;
      }
    }

    /// <summary>Field number for the "maze_buff_list" field.</summary>
    public const int MazeBuffListFieldNumber = 7;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.RogueCommonBuff> _repeated_mazeBuffList_codec
        = pb::FieldCodec.ForMessage(58, global::EggLink.DanhengServer.Proto.RogueCommonBuff.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.RogueCommonBuff> mazeBuffList_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.RogueCommonBuff>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.RogueCommonBuff> MazeBuffList {
      get { return mazeBuffList_; }
    }

    /// <summary>Field number for the "roll_buff_free_times" field.</summary>
    public const int RollBuffFreeTimesFieldNumber = 8;
    private uint rollBuffFreeTimes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RollBuffFreeTimes {
      get { return rollBuffFreeTimes_; }
      set {
        rollBuffFreeTimes_ = value;
      }
    }

    /// <summary>Field number for the "first_buff_type_list" field.</summary>
    public const int FirstBuffTypeListFieldNumber = 6;
    private static readonly pb::FieldCodec<uint> _repeated_firstBuffTypeList_codec
        = pb::FieldCodec.ForUInt32(50);
    private readonly pbc::RepeatedField<uint> firstBuffTypeList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> FirstBuffTypeList {
      get { return firstBuffTypeList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RogueCommonBuffSelectInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RogueCommonBuffSelectInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RollBuffsCost, other.RollBuffsCost)) return false;
      if (RollBuffTimes != other.RollBuffTimes) return false;
      if (CanRoll != other.CanRoll) return false;
      if (SelectBuffSourceHint != other.SelectBuffSourceHint) return false;
      if (SourceTotalCount != other.SourceTotalCount) return false;
      if(!handbookUnlockBuffIdList_.Equals(other.handbookUnlockBuffIdList_)) return false;
      if (RollBuffMaxTimes != other.RollBuffMaxTimes) return false;
      if (SourceType != other.SourceType) return false;
      if (SourceCurCount != other.SourceCurCount) return false;
      if(!mazeBuffList_.Equals(other.mazeBuffList_)) return false;
      if (RollBuffFreeTimes != other.RollBuffFreeTimes) return false;
      if(!firstBuffTypeList_.Equals(other.firstBuffTypeList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (rollBuffsCost_ != null) hash ^= RollBuffsCost.GetHashCode();
      if (RollBuffTimes != 0) hash ^= RollBuffTimes.GetHashCode();
      if (CanRoll != false) hash ^= CanRoll.GetHashCode();
      if (SelectBuffSourceHint != 0) hash ^= SelectBuffSourceHint.GetHashCode();
      if (SourceTotalCount != 0) hash ^= SourceTotalCount.GetHashCode();
      hash ^= handbookUnlockBuffIdList_.GetHashCode();
      if (RollBuffMaxTimes != 0) hash ^= RollBuffMaxTimes.GetHashCode();
      if (SourceType != global::EggLink.DanhengServer.Proto.RogueCommonBuffSelectSource.TypeNone) hash ^= SourceType.GetHashCode();
      if (SourceCurCount != 0) hash ^= SourceCurCount.GetHashCode();
      hash ^= mazeBuffList_.GetHashCode();
      if (RollBuffFreeTimes != 0) hash ^= RollBuffFreeTimes.GetHashCode();
      hash ^= firstBuffTypeList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SourceTotalCount != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(SourceTotalCount);
      }
      if (CanRoll != false) {
        output.WriteRawTag(16);
        output.WriteBool(CanRoll);
      }
      if (SelectBuffSourceHint != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(SelectBuffSourceHint);
      }
      firstBuffTypeList_.WriteTo(output, _repeated_firstBuffTypeList_codec);
      mazeBuffList_.WriteTo(output, _repeated_mazeBuffList_codec);
      if (RollBuffFreeTimes != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(RollBuffFreeTimes);
      }
      if (RollBuffMaxTimes != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(RollBuffMaxTimes);
      }
      if (SourceCurCount != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(SourceCurCount);
      }
      if (RollBuffTimes != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(RollBuffTimes);
      }
      if (rollBuffsCost_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(RollBuffsCost);
      }
      if (SourceType != global::EggLink.DanhengServer.Proto.RogueCommonBuffSelectSource.TypeNone) {
        output.WriteRawTag(112);
        output.WriteEnum((int) SourceType);
      }
      handbookUnlockBuffIdList_.WriteTo(output, _repeated_handbookUnlockBuffIdList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SourceTotalCount != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(SourceTotalCount);
      }
      if (CanRoll != false) {
        output.WriteRawTag(16);
        output.WriteBool(CanRoll);
      }
      if (SelectBuffSourceHint != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(SelectBuffSourceHint);
      }
      firstBuffTypeList_.WriteTo(ref output, _repeated_firstBuffTypeList_codec);
      mazeBuffList_.WriteTo(ref output, _repeated_mazeBuffList_codec);
      if (RollBuffFreeTimes != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(RollBuffFreeTimes);
      }
      if (RollBuffMaxTimes != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(RollBuffMaxTimes);
      }
      if (SourceCurCount != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(SourceCurCount);
      }
      if (RollBuffTimes != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(RollBuffTimes);
      }
      if (rollBuffsCost_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(RollBuffsCost);
      }
      if (SourceType != global::EggLink.DanhengServer.Proto.RogueCommonBuffSelectSource.TypeNone) {
        output.WriteRawTag(112);
        output.WriteEnum((int) SourceType);
      }
      handbookUnlockBuffIdList_.WriteTo(ref output, _repeated_handbookUnlockBuffIdList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (rollBuffsCost_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RollBuffsCost);
      }
      if (RollBuffTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RollBuffTimes);
      }
      if (CanRoll != false) {
        size += 1 + 1;
      }
      if (SelectBuffSourceHint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SelectBuffSourceHint);
      }
      if (SourceTotalCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SourceTotalCount);
      }
      size += handbookUnlockBuffIdList_.CalculateSize(_repeated_handbookUnlockBuffIdList_codec);
      if (RollBuffMaxTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RollBuffMaxTimes);
      }
      if (SourceType != global::EggLink.DanhengServer.Proto.RogueCommonBuffSelectSource.TypeNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SourceType);
      }
      if (SourceCurCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SourceCurCount);
      }
      size += mazeBuffList_.CalculateSize(_repeated_mazeBuffList_codec);
      if (RollBuffFreeTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RollBuffFreeTimes);
      }
      size += firstBuffTypeList_.CalculateSize(_repeated_firstBuffTypeList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RogueCommonBuffSelectInfo other) {
      if (other == null) {
        return;
      }
      if (other.rollBuffsCost_ != null) {
        if (rollBuffsCost_ == null) {
          RollBuffsCost = new global::EggLink.DanhengServer.Proto.ItemCostList();
        }
        RollBuffsCost.MergeFrom(other.RollBuffsCost);
      }
      if (other.RollBuffTimes != 0) {
        RollBuffTimes = other.RollBuffTimes;
      }
      if (other.CanRoll != false) {
        CanRoll = other.CanRoll;
      }
      if (other.SelectBuffSourceHint != 0) {
        SelectBuffSourceHint = other.SelectBuffSourceHint;
      }
      if (other.SourceTotalCount != 0) {
        SourceTotalCount = other.SourceTotalCount;
      }
      handbookUnlockBuffIdList_.Add(other.handbookUnlockBuffIdList_);
      if (other.RollBuffMaxTimes != 0) {
        RollBuffMaxTimes = other.RollBuffMaxTimes;
      }
      if (other.SourceType != global::EggLink.DanhengServer.Proto.RogueCommonBuffSelectSource.TypeNone) {
        SourceType = other.SourceType;
      }
      if (other.SourceCurCount != 0) {
        SourceCurCount = other.SourceCurCount;
      }
      mazeBuffList_.Add(other.mazeBuffList_);
      if (other.RollBuffFreeTimes != 0) {
        RollBuffFreeTimes = other.RollBuffFreeTimes;
      }
      firstBuffTypeList_.Add(other.firstBuffTypeList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SourceTotalCount = input.ReadUInt32();
            break;
          }
          case 16: {
            CanRoll = input.ReadBool();
            break;
          }
          case 32: {
            SelectBuffSourceHint = input.ReadUInt32();
            break;
          }
          case 50:
          case 48: {
            firstBuffTypeList_.AddEntriesFrom(input, _repeated_firstBuffTypeList_codec);
            break;
          }
          case 58: {
            mazeBuffList_.AddEntriesFrom(input, _repeated_mazeBuffList_codec);
            break;
          }
          case 64: {
            RollBuffFreeTimes = input.ReadUInt32();
            break;
          }
          case 72: {
            RollBuffMaxTimes = input.ReadUInt32();
            break;
          }
          case 80: {
            SourceCurCount = input.ReadUInt32();
            break;
          }
          case 88: {
            RollBuffTimes = input.ReadUInt32();
            break;
          }
          case 98: {
            if (rollBuffsCost_ == null) {
              RollBuffsCost = new global::EggLink.DanhengServer.Proto.ItemCostList();
            }
            input.ReadMessage(RollBuffsCost);
            break;
          }
          case 112: {
            SourceType = (global::EggLink.DanhengServer.Proto.RogueCommonBuffSelectSource) input.ReadEnum();
            break;
          }
          case 122:
          case 120: {
            handbookUnlockBuffIdList_.AddEntriesFrom(input, _repeated_handbookUnlockBuffIdList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SourceTotalCount = input.ReadUInt32();
            break;
          }
          case 16: {
            CanRoll = input.ReadBool();
            break;
          }
          case 32: {
            SelectBuffSourceHint = input.ReadUInt32();
            break;
          }
          case 50:
          case 48: {
            firstBuffTypeList_.AddEntriesFrom(ref input, _repeated_firstBuffTypeList_codec);
            break;
          }
          case 58: {
            mazeBuffList_.AddEntriesFrom(ref input, _repeated_mazeBuffList_codec);
            break;
          }
          case 64: {
            RollBuffFreeTimes = input.ReadUInt32();
            break;
          }
          case 72: {
            RollBuffMaxTimes = input.ReadUInt32();
            break;
          }
          case 80: {
            SourceCurCount = input.ReadUInt32();
            break;
          }
          case 88: {
            RollBuffTimes = input.ReadUInt32();
            break;
          }
          case 98: {
            if (rollBuffsCost_ == null) {
              RollBuffsCost = new global::EggLink.DanhengServer.Proto.ItemCostList();
            }
            input.ReadMessage(RollBuffsCost);
            break;
          }
          case 112: {
            SourceType = (global::EggLink.DanhengServer.Proto.RogueCommonBuffSelectSource) input.ReadEnum();
            break;
          }
          case 122:
          case 120: {
            handbookUnlockBuffIdList_.AddEntriesFrom(ref input, _repeated_handbookUnlockBuffIdList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
